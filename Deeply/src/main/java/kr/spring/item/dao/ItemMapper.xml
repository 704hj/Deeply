<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper   
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"   
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">  

<mapper namespace="kr.spring.item.dao.ItemMapper">
	<!-- 상품 등록 -->
	<insert id="insertItem" parameterType="itemVO">
		INSERT INTO shop_item(
			item_num,
			user_num,
			filename,
			item_name,
			item_price,
			item_description,
			item_stock)
		VALUES (
			shop_item_seq.nextval,
			#{user_num},
			#{filename},
			#{item_name},
			#{item_price},
			#{item_description},
			#{item_stock})
	</insert>
	
	<!-- sql태그와 include 태그를 이용해 sql문을 재사용 -->
	<sql id="shopSearch">
	<where>
		<if test="keyword != null and keyword != ''">
			<if test="keyfield == 1">
				name LIKE '%' || #{keyword} || '%'
			</if>
			<if test="keyfield == 2">
				item_name LIKE '%' || #{keyword} || '%'
			</if>
		</if>
	</where>
	</sql>
	
	<sql id="shopOrder">
		<if test="order == 1">
			ORDER BY name DESC
		</if>
		<if test="order == 2">
			ORDER BY item_name DESC
		</if>
	</sql>

	<select id="selectRowCount" parameterType="map" resultType="integer">
		SELECT
			COUNT(*)
		FROM shop_item JOIN agroup ON shop_item.user_num = agroup.group_num
		<include refid="shopSearch"/>
	</select>
	
	<select id="selectList" parameterType="map" resultType="itemVO">
		SELECT
			*
		FROM (SELECT
				a.*,
				rownum rnum
			FROM (SELECT
					item_num,
					filename,
					item_name,
					item_regdate,
					item_modifydate,
					item_stock,
					item_description,
					item_price,
					user_num
				FROM shop_item
				JOIN agroup ON shop_item.user_num = agroup.group_num
					)a
				)
			<![CDATA[
					WHERE rnum >= #{start} 
					AND rnum <= #{end}
			]]>
				ORDER BY item_regdate desc
		 			
	</select>	
	
	<update id="updateItem" parameterType="ItemVO">
		UPDATE shop_item SET 
				user_num = #{user_num},
				filename = #{filename},
				item_name = #{item_name},
				item_price = #{item_price},
				item_description = #{item_description},
				item_stock = #{item_stock},
				item_modifydate = SYSDATE
		WHERE item_num = #{item_num}
	</update>
	
	<select id="showListByGroup" parameterType="map" resultType="map">
	    SELECT *
	    FROM (
	        SELECT 
	            g.group_name,
	            g.group_photo,
	            i.item_num,
	            i.item_name,
	            i.item_price,
	            i.item_description,
	            i.item_stock,
	            i.filename,
	            ROW_NUMBER() OVER (PARTITION BY g.group_name ORDER BY i.item_modifydate DESC) AS rnum
	        FROM agroup g
	        LEFT JOIN shop_item i ON g.group_num = i.group_num
	    ) sub
	    <![CDATA[
	    WHERE sub.rnum <= 4
	    ORDER BY sub.group_name, sub.rnum
	    ]]>
	</select>







</mapper>